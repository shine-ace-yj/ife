* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  padding: 20px;
}

#container {
  /*background-color: #eee;*/
  float: left;
  width: 100%;
  padding: 20px;
  border: 1px solid #27f;
}

#left {
  width: 200px;
  float: left;
  padding: 20px;
  margin-left: calc(-100% + 20px);
  margin-top: 20px;
  border: 1px solid #27f;
}

#right {
  width: 120px;
  float: left;
  padding: 20px;
  margin-top: 20px;
  border: 1px solid #27f;
  margin-left: -140px;
}

#center {
  margin-left: 220px;
  margin-right: 140px;
  border: 1px solid #27f;
  line-height: 2;
  padding: 20px;
}

ul {
  list-style: none;
}

img {
  border: 1px solid #27f;
}

figure,
figcaption {
  float: left;
}

figcaption {
  padding-left: 10px;
}

/*
负边距margin
<div id="container">
  <div id="center"></div>
</div>
<div id="left"></div>
<div id="right"></div>

把中间的模块center用container包裹起来，container设置width: 100%; float: left; center
模块： left right container( center ) float: left;
container width:100%;占据整个上部； float: left;
center: margin-left: x px; margin-right: a px; 中间的模块 设置左右边距 给left,right模块让出空间；
left: width: a px; margin-left: -100%; left模块原本在下部的紧贴左边的边,负边距-100%，向左移100%浏览器界面宽度左贴住，所以向上再左移；
right: width: b px; margin-left: right-width px; 原理同left;

position:
left center right Html中位置无关
center正常文档流中；设置左右margin，给left,right模块让出空间；
left,right模块position: absolute; 脱离文档流；top: 0; 
left模块 设置宽度， left: 0;
right模块：设置宽度， right: 0;


float:
<div id="left"></div>
<div id="right"></div>
<div id="center"></div>
left: float: left; width: ~px; 脱离文档流
right: float: right; width: ~px; 脱离文档流
center: margin左右边距; 正常文档流
right得在center前，不然center的右边距挡住right;

关键：边距， 脱离文档流
*/